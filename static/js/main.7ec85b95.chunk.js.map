{"version":3,"sources":["images/avatar.png","store/actions/userActions.js","components/gitProfiles/SearchInput.js","api/apiUtils.js","api/gitApi.js","store/actions/gitActions.js","components/gitProfiles/ProfilesListSearched.js","components/gitProfiles/Hooks.js","components/Profiles.js","store/actions/gitUserActions.js","components/gitProfiles/ProfilesListSinglePg01.js","store/actions/gitReposActions.js","components/gitProfiles/Tables.js","components/gitProfiles/ProfilesListSinglePg02.js","components/gitProfiles/ProfilesListSinglePg.js","components/gitProfiles/ProfilesListSingle.js","components/Home.js","components/Navbar.js","components/Redirect.js","store/actions/searchInputActions.js","components/getGits/SearchInput.js","components/getGits/ProfilesListSearched.js","components/getGits/SearchResults.js","components/SearchPage.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","store/reducers/gitReducer.js","store/reducers/gitReposReducer.js","store/reducers/gitUserReducer.js","store/reducers/userReducer.js","store/reducers/searchInputReducer.js","index.js","store/configureStore.js"],"names":["module","exports","searchUser","user","type","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","margin","maxWidth","spacing","breakpoints","up","width","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","connect","state","ownProps","params","dispatch","userActions","bindActionCreators","props","useState","name","setState","classes","style","className","onSubmit","e","preventDefault","InputBase","onChange","target","value","placeholder","root","input","inputProps","handleResponse","response","a","status","handleError","error","console","log","getGit","url","axios","get","then","catch","route","gitApi","gits","minWidth","background","bullet","transform","title","fontSize","pos","marginBottom","button","img","users","data","items","Grid","container","justify","map","key","id","item","Card","variant","CardContent","Avatar","alt","login","src","avatar_url","Typography","component","align","href","html_url","rel","IconButton","CardActions","Button","NavLink","to","size","disableElevation","createMuiTheme","overrides","MuiPaginationItem","actions","gitActions","since","setSince","page","setPage","pageHandle","setPageHandle","setURL","ref","useRef","userVariable","handleChange","event","paige","useEffect","newUser","prevUser","current","fetchData","urll","alert","count","total_count","Math","ceil","ThemeProvider","Pagination","Profiles","Hooks","this","Component","getGitUser","gitUser","email","blog","bio","text","onCopy","getGitRepos","gitRepos","MuiTypography","colorInherit","MuiSelect","icon","MuiIconButton","label","flexShrink","marginLeft","useStyles2","table","rows","React","rowsPerPage","emptyRows","min","length","TableContainer","Paper","Table","aria-label","TableBody","slice","row","TableRow","TableCell","scope","description","colSpan","userfromURL","setLoading","Tables","pag","MuiTab","textColorPrimary","border","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","FullWidthTabs","useTheme","setValue","AppBar","Tabs","newValue","indicatorColor","Tab","axis","direction","onChangeIndex","dir","ProfilesListSinglePg01","ProfilesListSinglePg02","match","minHeight","public_repos","followers","public_gists","flexGrow","avatar","marginTop","marginBotton","fontFamily","subtitle","typedContainer","top","left","zIndex","Header","strings","typeSpeed","backSpeed","menuSliderContainer","listItem","listLink","textDecoration","menuItems","listIcon","listText","AssignmentInd","Apps","ContactMail","Navbar","slider","right","toggleSlider","open","Toolbar","marginRight","onClick","anchor","onClose","Divider","List","lstItem","ListItem","reloader","ListItemIcon","ListItemText","primary","Redirect","history","push","searchInput","inputRef","newInput","prevInput","SearchPage","prevProps","prevState","App","CssBaseline","exact","path","Home","ProfilesListSingle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","action","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ec85b95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.df725df2.png\";","export function searchUser(user) {\r\n   return {\r\n      type: 'SEARCH_USER',\r\n      user: user\r\n   }\r\n}","import React, { useState } from 'react'\r\nimport {\r\n   // AppBar,\r\n   // Toolbar\r\n} from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n// import { useHistory } from 'react-router-dom'\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as userActions from '../../store/actions/userActions'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.5),\r\n      '&:hover': {\r\n         backgroundColor: fade(theme.palette.common.white, 0.7),\r\n      },\r\n      margin: '1rem auto 2rem auto',\r\n      maxWidth: theme.spacing(60),\r\n      [theme.breakpoints.up('sm')]: {\r\n         // marginLeft: theme.spacing(3),\r\n         width: 'auto',\r\n      },\r\n   },\r\n   searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n   },\r\n   inputRoot: {\r\n      color: 'inherit',\r\n   },\r\n   inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n         width: '20ch',\r\n      },\r\n   },\r\n}))\r\n\r\n\r\nconst SearchInput = (props) => {\r\n   const [state, setState] = useState({\r\n      // right: false,\r\n      // search: false,\r\n      name: ''\r\n   })\r\n   const handleChange = (e) => {\r\n      setState({ name: e.target.value })\r\n   }\r\n   const handleSearch = (e) => {\r\n      e.preventDefault()\r\n      // let history = useHistory()\r\n      props.userActions.searchUser(state.name)\r\n      // setState({ ...state, search: true })\r\n      // history.push('/gitProfiles')\r\n\r\n\r\n   }\r\n\r\n   const classes = useStyles()\r\n\r\n   // if (state.search === true) {\r\n   //    return <Redirect to=\"/search\" />\r\n   // }\r\n   return (\r\n      <div style={{padding:'1rem'}}>\r\n            <div className={classes.search}>\r\n               <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n               </div>\r\n               <form onSubmit={handleSearch}>\r\n                  <InputBase\r\n                     onChange={handleChange}\r\n                     placeholder=\"Search…\"\r\n                     classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                     }}\r\n                     inputProps={{ 'aria-label': 'search' }}\r\n                  />\r\n               </form>\r\n            </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      user: state.user,\r\n      params: ownProps\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      userActions: bindActionCreators(userActions, dispatch)\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput)\r\n// export default SearchInput\r\n","export async function handleResponse(response) {\r\n  if (response.status === 200) {\r\n    // console.log(response)\r\n    return response\r\n    // return response.data\r\n  }\r\n  // if (response.status === 401) return console.log(\"Error\")\r\n  // if (response.status === 401) {\r\n  //   const error = await response.text();\r\n  //   throw new Error(error);\r\n  // }\r\n  // throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  // console.error(\"API call failed. \" + error);\r\n  // throw error;\r\n  console.log(error);\r\n\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nimport axios from 'axios'\r\nconst baseUrl = `https://api.github.com`\r\n\r\nexport function getGit(params) {\r\n  const url = baseUrl + params\r\n  // const url = page ? baseUrl + params +'&page='+ page : baseUrl + params\r\n  console.log(url)\r\n  return axios.get(url)\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n\r\n// export function saveCourse(course) {\r\n//   return fetch(baseUrl + (course.id || \"\"), {\r\n//     method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n//     headers: { \"content-type\": \"application/json\" },\r\n//     body: JSON.stringify(course)\r\n//   })\r\n//     .then(handleResponse)\r\n//     .catch(handleError);\r\n// }\r\n\r\n// export function deleteCourse(courseId) {\r\n//   return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n//     .then(handleResponse)\r\n//     .catch(handleError);\r\n// }\r\n","import * as gitApi from '../../api/gitApi'\r\n\r\nexport function getGit(route){\r\n   return (dispatch) => {\r\n      return gitApi.getGit(route).then(gits => {\r\n         // console.log(route,gits);\r\n         dispatch({ type: \"LOAD_GIT_SUCCESS\", gits })\r\n      }).catch(error => { throw error; })\r\n   }\r\n}\r\n\r\n\r\n   // https://api.github.com/zen\r\n   // https://api.github.com/user\r\n   // https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc\r\n   // https://api.github.com/search/repositories?q=react+js&page=2\r\n   // https://api.github.com/search/users?q=m-ali-rashid\r\n   // https://api.github.com/gists/public\r\n   // https://api.github.com/users\r\n   // https://api.github.com/users/mojombo\r\n   // https://api.github.com/users/mojombo/received_events\r\n   // https://api.github.com/users/mojombo/gists\r\n   // https://api.github.com/users/mojombo/gists/cda3a6a1d039398f09ee\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { NavLink } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n\t\t\tminWidth: 275,\r\n\t\t\tmaxWidth:300,\r\n\t\t\tbackground:'white',\r\n\t\t\tcolor: 'white',\r\n\t\t\tpadding:'1rem'\r\n   },\r\n   bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n   },\r\n   title: {\r\n\t\t fontSize: 14,\r\n\t\t color: 'white'\r\n   },\r\n   pos: {\r\n\t\t marginBottom: 12,\r\n\t },\r\n\tbutton: {\r\n\t\twidth:'100%'\r\n\t},\r\n\timg: {\r\n\t\tmargin: '0rem auto 1rem auto',\r\n\t\twidth: theme.spacing(20),\r\n\t\theight: theme.spacing(20),\r\n\t}\r\n}));\r\n\r\nconst ProfilesListSearched = (props) => {\r\n   const classes = useStyles();\r\n\t const users = props.user ? props.gits.data.items : props.gits.data\r\n   // console.log(props.user ? props.gits.data.total_count : 'nops');\r\n   return(\r\n\t\t\t\t <Grid container justify=\"center\" spacing={2} style={{margin:'0 -1rem'}}>\r\n\t\t\t\t {\r\n           users ? (\r\n\t\t\t\t\tusers.map(user => (\r\n\t\t\t\t\t<Grid key={user.id} item>\r\n\t\t\t\t\t <Card className={classes.root} variant=\"outlined\">\r\n\t\t\t\t\t\t <CardContent>\r\n\t\t\t\t\t\t\t <Avatar alt={user.login} src={user.avatar_url} className={classes.img} />\r\n\t\t\t\t\t\t\t <Typography variant=\"h5\" color=\"textPrimary\" component=\"h2\" align='center'>\r\n\t\t\t\t\t\t\t\t{user.login}\r\n\t\t\t\t\t\t\t\t<a href={user.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t\t<GitHubIcon/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t </Typography>\r\n\t\t\t\t\t\t </CardContent>\r\n\t\t\t\t\t\t <CardActions>\r\n\t\t\t\t\t\t\t\t <Button component={NavLink} to={'/gitProfiles/'+user.login} size=\"small\" variant=\"contained\" color=\"primary\" disableElevation className={classes.button}>Learn More</Button>\r\n\t\t\t\t\t\t </CardActions>\r\n\t\t\t\t\t </Card>\r\n\t\t\t\t\t </Grid>\r\n\t\t\t\t ))\r\n       ):(\r\n         <div className=\"my-4 text-white text-center\">\r\n          <h2>Please Wait</h2>\r\n          <h3>While Data loads</h3>\r\n         </div>\r\n       )\r\n\t\t\t\t }\r\n\r\n\t\t\t\t </Grid>\r\n   )\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gits: state.gits\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilesListSearched)\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as gitActions from '../../store/actions/gitActions'\r\n// import Button from '@material-ui/core/Button';\r\n// import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n// import ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProfilesListSearched from './ProfilesListSearched'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiPaginationItem: {\r\n      root: {\r\n        color: 'white',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction ProfilesList(props) {\r\n   const [since, setSince] = useState(0)\r\n   const [page, setPage] = useState(0)\r\n   const [pageHandle, setPageHandle] = useState(false)\r\n   const [user] = useState('')\r\n   const [url, setURL] = useState('')\r\n   // const [reload, setReload] = useState(0)\r\n\r\n   const ref = useRef({\r\n      userVariable: user,\r\n   });\r\n\r\n   // const prevPage = () => {\r\n   //    pageHandle ? (setPage(page-1)):(setSince(since-1))\r\n   // }\r\n   // const nextPage = () => {\r\n   //    pageHandle ? (setPage(page+1)) : (setSince(since+1))\r\n   // }\r\n   const handleChange = (event,paige) => {\r\n     pageHandle ? setPage(paige-1) : setSince(paige-1)\r\n     // console.log(paige);\r\n   }\r\n\r\n   useEffect(() => {\r\n      // console.log(\"render!\");\r\n      (props.user === '') ? setPageHandle(false) : setPageHandle(true)\r\n      const newUser = props.user;\r\n      const prevUser = ref.current.userVariable;\r\n      // const prevReloader = ref.current.reloadVariable;\r\n\r\n      const fetchData = async () => {\r\n         const urll = (props.user === \"\") ? `/users?since=${since * 30}` : `/search/users?q=${props.user}&page=${page + 1}`\r\n         setURL(urll)\r\n         await props.actions.getGit(urll)\r\n            // .then(console.log(props))\r\n            .catch(error => { alert(\"Som Tin Wong\") })\r\n         }\r\n\r\n      if (prevUser !== newUser) { setPage(0) }\r\n\r\n      fetchData()\r\n\r\n      // update Ref\r\n      ref.current.userVariable = props.user\r\n      // ref.current.reloadVariable = props.reloader\r\n\r\n      //unmounting\r\n      // return () => { console.log(\"unmounting...\");}\r\n   },[since,page,props.user]);\r\n\r\n   const count = props.user ? (\r\n     (props.gits.data.total_count <= 1000) ? (\r\n       Math.ceil(props.gits.data.total_count / 30)\r\n     ) : (\r\n       Math.ceil(1000/30)\r\n     )\r\n   ) : 'nops'\r\n\r\n   return (\r\n      <>\r\n         <Grid container justify=\"center\">\r\n         {/*console.log(count)*/}\r\n         <ThemeProvider theme={theme}>\r\n         {\r\n           count === 'nops' ? (\r\n             <Pagination count={100} page={pageHandle ? page+1 : since+1} onChange={handleChange} color=\"primary\"/>\r\n           ):(\r\n             <Pagination count={count} page={pageHandle ? page+1 : since+1} onChange={handleChange} color=\"primary\"/>\r\n           )\r\n         }\r\n\r\n         </ThemeProvider>\r\n          {/*\r\n            <Button onClick={prevPage} color=\"primary\"><ArrowBackIosIcon style={{ fontSize: 40 }} /></Button>\r\n            <Button onClick={nextPage} color=\"primary\"><ArrowForwardIosIcon style={{ fontSize: 40 }} /></Button>\r\n          */}\r\n         </Grid>\r\n         <ProfilesListSearched user={props.user} url={url} />\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gits: state.gits\r\n   }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      actions: bindActionCreators(gitActions, dispatch)\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilesList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import ProfilesList from './ProfilesList'\r\nimport SearchInput from './gitProfiles/SearchInput'\r\nimport Hooks from './gitProfiles/Hooks'\r\n\r\nclass Profiles extends Component {\r\n   state = {\r\n      name:''\r\n   }\r\n   componentDidMount(){\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <SearchInput/>\r\n            <Hooks user={this.props.user}/>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      user: state.user\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profiles)\r\n","import * as gitApi from '../../api/gitApi'\r\n\r\nexport function getGitUser(route){\r\n   return (dispatch) => {\r\n      return gitApi.getGit(route).then(gits => {\r\n         console.log(route,gits);\r\n         dispatch({ type: \"LOAD_GIT_USER_SUCCESS\", gitUser:gits })\r\n      }).catch(error => { throw error; })\r\n   }\r\n}\r\n\r\n\r\n   // https://api.github.com/zen\r\n   // https://api.github.com/user\r\n   // https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc\r\n   // https://api.github.com/search/repositories?q=react+js&page=2\r\n   // https://api.github.com/search/users?q=m-ali-rashid\r\n   // https://api.github.com/gists/public\r\n   // https://api.github.com/users\r\n   // https://api.github.com/users/mojombo\r\n   // https://api.github.com/users/mojombo/received_events\r\n   // https://api.github.com/users/mojombo/gists\r\n   // https://api.github.com/users/mojombo/gists/cda3a6a1d039398f09ee","import React /*,{ useEffect, useState } */from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { IconButton } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// import Tables from './Tables'\r\n\r\n\r\nconst ProfilesListSingle = (props) => {\r\n\r\n   const user = props.gits\r\n   const email = user.data.email\r\n   const blog = user.data.blog\r\n\r\n   return (\r\n         <div>\r\n            <h1 className=\"my-4\">Hey...</h1>\r\n            <h2 className=\"my-4\">My name is <span style={{ color: '#F2AF29' }}>{user.data.name}</span></h2>\r\n            <h6 className=\"my-4 text-muted\">{user.data.bio}</h6>\r\n            <a href={user.data.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n               <IconButton className=\"text-white\" >\r\n                  <GitHubIcon />\r\n               </IconButton>\r\n            </a>\r\n            {\r\n               blog ? (\r\n                  <a href={user.data.blog} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                     <IconButton className=\"text-white\" >\r\n                        <InsertLinkIcon />\r\n                     </IconButton>\r\n                  </a>\r\n               ):('')\r\n            }\r\n            {\r\n               email ? (\r\n                  <CopyToClipboard text={email}\r\n                     onCopy={() => alert(`Email: ${email} has been copied to the clipboard`)}>\r\n                     <span>Copy to clipboard with span</span>\r\n                  </CopyToClipboard>\r\n               ) : ('')\r\n            }\r\n         </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gits: state.gitUser\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilesListSingle)\r\n","import * as gitApi from '../../api/gitApi'\r\n\r\nexport function getGitRepos(route){\r\n   return (dispatch) => {\r\n      return gitApi.getGit(route).then(gits => {\r\n         dispatch({ type: \"LOAD_GIT_REPOS_SUCCESS\", gitRepos:gits })\r\n      }).catch(error => { throw error; })\r\n   }\r\n}\r\n\r\n\r\n   // https://api.github.com/zen\r\n   // https://api.github.com/user\r\n   // https://api.github.com/search/repositories?q=tetris+language:assembly&sort=stars&order=desc\r\n   // https://api.github.com/search/repositories?q=react+js&page=2\r\n   // https://api.github.com/search/users?q=m-ali-rashid\r\n   // https://api.github.com/gists/public\r\n   // https://api.github.com/users\r\n   // https://api.github.com/users/mojombo\r\n   // https://api.github.com/users/mojombo/received_events\r\n   // https://api.github.com/users/mojombo/gists\r\n   // https://api.github.com/users/mojombo/gists/cda3a6a1d039398f09ee\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    // Style sheet name ⚛️\r\n    MuiTypography: {\r\n      // Name of the rule\r\n      colorInherit: {\r\n        // Some CSS\r\n        color: 'white',\r\n      },\r\n    },\r\n    MuiSelect:{\r\n      root:{\r\n        color:'white'\r\n      },\r\n      icon:{\r\n        color:'white'\r\n      }\r\n    },\r\n    MuiIconButton:{\r\n      label:{\r\n        color:'white'\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n   root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n   },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n   const classes = useStyles1();\r\n   const theme = useTheme();\r\n   const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n   const handleFirstPageButtonClick = (event) => {\r\n      onChangePage(event, 0);\r\n   };\r\n\r\n   const handleBackButtonClick = (event) => {\r\n      onChangePage(event, page - 1);\r\n   };\r\n\r\n   const handleNextButtonClick = (event) => {\r\n      onChangePage(event, page + 1);\r\n   };\r\n\r\n   const handleLastPageButtonClick = (event) => {\r\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n   };\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <IconButton\r\n            onClick={handleFirstPageButtonClick}\r\n            disabled={page === 0}\r\n            aria-label=\"first page\"\r\n         >\r\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n         </IconButton>\r\n         <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n         </IconButton>\r\n         <IconButton\r\n            onClick={handleNextButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"next page\"\r\n         >\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n         </IconButton>\r\n         <IconButton\r\n            onClick={handleLastPageButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"last page\"\r\n         >\r\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n         </IconButton>\r\n      </div>\r\n   );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n   count: PropTypes.number.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   page: PropTypes.number.isRequired,\r\n   rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData (name, description) {\r\n  return {name, description}\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n   table: {\r\n      minWidth: 300,\r\n   },\r\n});\r\n\r\nfunction CustomPaginationActionsTable(props) {\r\n\r\n  // const rows = [\r\n    // createData('Oreo', 437, 18.0),\r\n  // ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst rows = props.gitRepos.data\r\n\r\n  console.log(rows);\r\n\r\n   const classes = useStyles2();\r\n   const [page, setPage] = React.useState(0);\r\n   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n   const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n   };\r\n\r\n   const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n   };\r\n\r\n   return (\r\n      <TableContainer style={{background:'transparent'}} component={Paper}>\r\n         <Table className={classes.table} aria-label=\"custom pagination table\">\r\n            <TableBody  >\r\n               {(rowsPerPage > 0\r\n                  ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  : rows\r\n               ).map((row) => (\r\n                  <TableRow  key={row.name}>\r\n                     <TableCell style = {{color:'white'}} component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                     </TableCell>\r\n                     <TableCell style={{ color:'white' }} align=\"left\">\r\n                        {row.description}\r\n                     </TableCell>\r\n                  </TableRow>\r\n               ))}\r\n\r\n               {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 53 * emptyRows }}>\r\n                     <TableCell colSpan={6} />\r\n                  </TableRow>\r\n               )}\r\n            </TableBody>\r\n            {/*\r\n\r\n            <TableFooter>\r\n               <TableRow style={{color:'white'}}>\r\n               <ThemeProvider theme={theme}>\r\n                  <TablePagination\r\n                     rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                     colSpan={3}\r\n                     count={rows.length}\r\n                     rowsPerPage={rowsPerPage}\r\n                     rowsPerPageOptions={[5]}\r\n                     page={page}\r\n                     SelectProps={{\r\n                        inputProps: { 'aria-label': 'rows per page' },\r\n                        native: true,\r\n                     }}\r\n                     onChangePage={handleChangePage}\r\n                     onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                     ActionsComponent={TablePaginationActions}\r\n                  />\r\n              </ThemeProvider>\r\n              </TableRow>\r\n            </TableFooter>\r\n            */}\r\n         </Table>\r\n      </TableContainer>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gitRepos: state.gitRepos\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CustomPaginationActionsTable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as gitActions from '../../store/actions/gitReposActions'\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import { IconButton, Typography } from '@material-ui/core';\r\n// import Typed from 'react-typed';\r\n// import { makeStyles } from '@material-ui/core/styles'\r\n// import {NavLink} from 'react-router-dom'\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\n// import InsertLinkIcon from '@material-ui/icons/InsertLink';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// import Button from '@material-ui/core/Button';\r\nimport Tables from './Tables'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiPaginationItem: {\r\n      root: {\r\n        color: 'white',\r\n      },\r\n    },\r\n  },\r\n});\r\nconst ProfilesListSingle = (props) => {\r\n   const userfromURL = props.userfromURL\r\n   const [loading, setLoading] = useState(true)\r\n   const [page, setPage] = useState(1)\r\n\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         await props.actions.getGitRepos(`/users/${userfromURL}/repos?page=${page}&&per_page=5`)\r\n            .then( setLoading(false), console.log('loaded:::',props))\r\n            .catch(error => {alert(\"Som Tin Wong\")})\r\n      }\r\n      fetchData()\r\n   },[page])\r\n\r\n   const handleChange = (event,pag) => {setPage(pag)}\r\n   const repos = props.gitRepos.data ? props.gitRepos.data : []\r\n\r\n   // console.log(props.gitRepos.data)\r\n\r\n   return (\r\n          repos.length ?(\r\n            <>\r\n              <Tables />\r\n              <div className=\"my-3\">\r\n                <ThemeProvider theme={theme}>\r\n                  <Pagination count={Math.ceil(props.count/5)} page={page} onChange={handleChange} color=\"primary\"/>\r\n                </ThemeProvider>\r\n              </div>\r\n            </>\r\n          ):(\r\n            <p className=\"text-white\">Please Wait While Data Loads...</p>\r\n          )\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gitRepos: state.gitRepos\r\n   }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      actions: bindActionCreators(gitActions, dispatch)\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilesListSingle)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ProfilesListSinglePg01 from './ProfilesListSinglePg01'\r\nimport ProfilesListSinglePg02 from './ProfilesListSinglePg02'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiTab: {\r\n      textColorPrimary: {\r\n        color: 'white',\r\n        border:'2px red solid'\r\n      },\r\n    },\r\n  },\r\n});\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'transparent',\r\n    // backgroundColor: theme.palette.background.paper,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function FullWidthTabs(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"transparent\">\r\n        <ThemeProvider theme={theme}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            // textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n          >\r\n            <Tab label=\"Intro\" {...a11yProps(0)} />\r\n            <Tab label=\"Repos\" {...a11yProps(1)} />\r\n            <Tab label=\"Gists\" {...a11yProps(2)} />\r\n          </Tabs>\r\n          </ThemeProvider>\r\n          </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <ProfilesListSinglePg01 userfromURL={props.userfromURL} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n        <ProfilesListSinglePg02 userfromURL={props.userfromURL} count={props.count}/>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          Gists\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n","import React, {/* useState,*/ useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as gitActions from '../../store/actions/gitUserActions'\r\n// import * as gitActions from '../store/actions/gitActions'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import { IconButton,Typography } from '@material-ui/core';\r\n// import Typed from 'react-typed';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// import {NavLink} from 'react-router-dom'\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\n// import InsertLinkIcon from '@material-ui/icons/InsertLink';\r\n// import {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport ProfilesListSinglePg from './ProfilesListSinglePg'\r\n\r\n// import Stepper from '@material-ui/core/Stepper';\r\n// import Step from '@material-ui/core/Step';\r\n// import StepLabel from '@material-ui/core/StepLabel';\r\n// import Button from '@material-ui/core/Button';\r\n\r\nconst ProfilesListSingle = (props) => {\r\n  const userfromURL = props.match.params.user\r\n  // console.log(props);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await props.actions.getGitUser(`/users/${userfromURL}`)\r\n        .then(console.log('loaded::::::', props))\r\n        .catch(error => { alert(\"Som Tin Wong\") })\r\n    }\r\n    fetchData()\r\n    // console.log(props)\r\n  }, [userfromURL])\r\n\r\n   const useStyles = makeStyles((theme) => ({\r\n      img: {\r\n         margin: '0rem auto 1rem auto',\r\n         width: '80%',\r\n         height:'auto'\r\n         // width: theme.spacing(50),\r\n         // height: theme.spacing(50),\r\n      },\r\n   }));\r\n\r\n  const classes = useStyles();\r\n  console.log(props)\r\n  const user = props.gitUser\r\n  // const email = user.email\r\n  // const name = user.name\r\n  // const blog = user.blog\r\n  // const [activeStep, setActiveStep] = useState(0);\r\n  // const steps = 3\r\n  //\r\n  //   function getStepContent(step) {\r\n  //     switch (step) {\r\n  //       case 0:\r\n  //         return <ProfilesListSinglePg01 userfromURL={userfromURL}/>;\r\n  //       case 1:\r\n  //         return <ProfilesListSinglePg02 userfromURL={userfromURL} count={user.public_repos}/>;\r\n  //       case 2:\r\n  //         return 'This is the bit I really care about!';\r\n  //       default:\r\n  //         return 'Unknown step';\r\n  //     }\r\n  //   }\r\n  //\r\n  //   const handleNext = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  //   };\r\n  //\r\n  //   const handleBack = () => {\r\n  //     setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  //   };\r\n\r\n   return(\r\n     <div className=\"container\">\r\n\r\n       {/* {console.log(user)} */}\r\n       {\r\n         user.length !== 0 ? (\r\n           <div>\r\n             <div className=\"row\" style={{ minHeight: '70vh' }}>\r\n               <div className=\"col-sm \">\r\n                 <Avatar\r\n                   alt={user.data.login}\r\n                   src={user.data.avatar_url}\r\n                   className={classes.img}\r\n                 // variant= 'rounded'\r\n                 />\r\n               </div>\r\n               <div className=\"col-md  text-white p-4\">\r\n                <ProfilesListSinglePg userfromURL={userfromURL} count={user.data.public_repos}/>\r\n               </div>\r\n             </div>\r\n             <div className=\"row  text-white py-4\">\r\n               <div className=\"col text-center\">\r\n                 <h3 style={{ color: '#F2AF29' }}>{user.data.followers}</h3>\r\n                 <h4>Followers</h4>\r\n               </div>\r\n               <div className=\"col text-center\">\r\n                 <h3 style={{ color: '#F2AF29' }}>{user.data.public_repos}</h3>\r\n                 <h4>Repos</h4>\r\n               </div>\r\n               <div className=\"col text-center\">\r\n                 <h3 style={{ color: '#F2AF29' }}>{user.data.public_gists}</h3>\r\n                 <h4>Gists</h4>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         ):(\r\n          <p className=\"text-white\">Please Wait While Data Loads...</p>\r\n         )\r\n       }\r\n     </div>\r\n\r\n\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gitUser: state.gitUser\r\n   }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      actions: bindActionCreators(gitActions, dispatch)\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilesListSingle)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Typography, Grid } from '@material-ui/core';\r\n// import avatar from '../images/avatar.png'\r\nimport Typed from 'react-typed';\r\n// import SearchInput from './SearchInput'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      flexGrow: 1,\r\n   },\r\n   avatar: {\r\n      width: theme.spacing(30),\r\n      height: theme.spacing(30),\r\n      marginTop: '3rem',\r\n      marginBotton: '3rem'\r\n      // margin: '6rem auto 1rem auto'\r\n   },\r\n   title: {\r\n      paddingLeft:'1rem',\r\n      fontFamily: 'Space Mono',\r\n      color: 'white'\r\n   },\r\n   subtitle: {\r\n      paddingLeft:'1.5rem',\r\n      fontFamily: 'Space Mono',\r\n      color: 'white'\r\n   },\r\n   typedContainer: {\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%,-50%)',\r\n      width: '100vw',\r\n      // textAlign: 'center',\r\n      zIndex: 1,\r\n   }\r\n}));\r\n\r\nconst Header = () => {\r\n   const classes = useStyles();\r\n   return (\r\n      <Box className={classes.typedContainer}>\r\n         <Grid container justify='center'>\r\n            {/* <Avatar className={classes.avatar} src={avatar} alt=\"Batman\" /> */}\r\n            {/* <SearchInput/> */}\r\n         </Grid>\r\n         <Typography className={classes.title} variant=\"h2\">\r\n            <Typed\r\n               strings={['Hello, World!']}\r\n               typeSpeed={300}\r\n               backSpeed={100}\r\n            />\r\n         </Typography>\r\n         <br /><br />\r\n         <Typography className={classes.subtitle} variant=\"h4\">\r\n            <Typed\r\n               strings={[\r\n                  'Welcome',\r\n                  'I am a cloned OctoCat',\r\n                  'click menu to get Git Data...'\r\n                  ]}\r\n               typeSpeed={150}\r\n               backSpeed={70}\r\n               >\r\n            </Typed>\r\n         </Typography>\r\n      </Box>\r\n   )\r\n}\r\n\r\nexport default Header\r\n","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {\r\n\t// AppBar,\r\n\tToolbar,\r\n\tListItem,\r\n\tIconButton,\r\n\tListItemText,\r\n\tListItemIcon,\r\n\tAvatar,\r\n\tDivider,\r\n\tList,\r\n\t// Typography,\r\n\tBox\r\n} from \"@material-ui/core\"\r\nimport {\r\n\tAssignmentInd,\r\n\tHome,\r\n\tApps,\r\n\tContactMail\r\n} from \"@material-ui/icons\"\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport MobilRightMenuSlider from '@material-ui/core/Drawer'\r\nimport avatar from \"../images/avatar.png\"\r\n// import {Redirect} from 'react-router-dom'\r\n\r\nimport { fade } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import InputBase from '@material-ui/core/InputBase';\r\n// import Badge from '@material-ui/core/Badge';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\n// import MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\n// const theme = useTheme();\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\tmenuSliderContainer:{\r\n\t\twidth:250,\r\n\t\tbackground:\"#511\",\r\n\t\theight:\"100%\"\r\n\t},\r\n\tavatar:{\r\n\t\tdisplay:\"block\",\r\n\t\tmargin:'0.5rem auto',\r\n\t\twidth: theme.spacing(13),\r\n\t\theight: theme.spacing(13)\r\n\t},\r\n\tlistItem:{\r\n\t\tcolor:'white'\r\n\t},\r\n\tlistLink:{\r\n\t\ttextDecoration:'none'\r\n\t},\r\n\tsearch: {\r\n\t\tposition: 'relative',\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tmargin: '0 auto',\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\t// marginLeft: theme.spacing(3),\r\n\t\t\twidth: 'auto',\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: '100%',\r\n\t\tposition: 'absolute',\r\n\t\tpointerEvents: 'none',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: 'inherit',\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\t// vertical padding + font size from searchIcon\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create('width'),\r\n\t\twidth: '100%',\r\n\t\t[theme.breakpoints.up('md')]: {\r\n\t\t\twidth: '20ch',\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nconst menuItems = [\r\n\t{\r\n\t\tlistIcon: <Home/>,\r\n\t\tlistText: 'Home',\r\n\t\tlistLink: '/'\r\n\t},\r\n\t{\r\n\t\tlistIcon: <AssignmentInd/>,\r\n\t\tlistText: 'Github Users',\r\n\t\t// listLink: '/redirecting'\r\n\t\tlistLink: '/gitProfiles'\r\n\t},\r\n\t{\r\n\t\tlistIcon: <Apps/>,\r\n\t\tlistText: 'Github Repositories',\r\n\t\tlistLink: '/gits/repos'\r\n\t\t// listLink: '/gitRepos'\r\n\t},\r\n\t{\r\n\t\tlistIcon: <ContactMail/>,\r\n\t\tlistText: 'Github Gists',\r\n\t\tlistLink: '/gits/gists'\r\n\t\t// listLink: '/gitGists'\r\n\t}\r\n]\r\n\r\nconst Navbar = () => {\r\n\tconst [state, setState] = useState({\r\n\t\tright:false,\r\n\t\t// search:false\r\n\t})\r\n\r\n\tconst toggleSlider = (slider,open) => () => {\r\n\t\tsetState({...state,[slider]:open})\r\n\t}\r\n\t// const handleSearch = (e) => {\r\n\t// \te.preventDefault()\r\n\t// \tsetState({ ...state, search: true })\r\n\t// }\r\n\r\n\tconst classes = useStyles()\r\n\tconst sideList = slider => (\r\n\t\t<Box className={classes.menuSliderContainer} component=\"div\">\r\n\t\t\t<Avatar className={classes.avatar} src={avatar} alt=\"Batman\" />\r\n\t\t\t<Divider />\r\n\t\t\t<List>\r\n\t\t\t\t{\r\n\t\t\t\t\tmenuItems.map((lstItem, key) => (\r\n\t\t\t\t\t<ListItem button key={key} component={NavLink} to={lstItem.listLink} reloader={'howdy'} onClick={toggleSlider(slider,false)}>\r\n\t\t\t\t\t\t<ListItemIcon className={classes.listItem}>\r\n\t\t\t\t\t\t\t{lstItem.listIcon}\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItemText className={classes.listItem} primary={lstItem.listText} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</List>\r\n\t\t</Box>\r\n\t )\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Box component=\"nav\">\r\n\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton style={{ color: 'white', marginRight: 'auto' }} component={NavLink} to='/redirecting'>\r\n\t\t\t\t\t<GitHubIcon/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton style={{ color: 'white'}} onClick={toggleSlider('right', true)}>\r\n\t\t\t\t\t<DehazeIcon/>\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Toolbar>\r\n\t\t\t\t<MobilRightMenuSlider\r\n\t\t\t\tanchor='right'\r\n\t\t\t\topen={state.right}\r\n\t\t\t\tonClose={toggleSlider('right')}\r\n\t\t\t>\r\n\t\t\t\t{sideList('right')}\r\n\t\t\t</MobilRightMenuSlider>\r\n\t\t</Box>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\n\r\nexport class Redirect extends Component {\r\n   // state = {\r\n   //    page: this.props.location.state.page,\r\n   //    limit: this.props.location.state.limit,\r\n   //    type: this.props.location.state.type\r\n   // }\r\n   componentDidMount() {\r\n      this.props.history.push(`/gitProfiles`)\r\n\r\n      // if (this.state.type === 'next') {\r\n      //    this.props.history.push(`top/${parseInt(this.state.page) + 10}/${this.state.limit}`)\r\n      // }\r\n      // else if (this.state.type === 'prev') {\r\n      //    this.props.history.push(`top/${parseInt(this.state.page) - 10}/${this.state.limit}`)\r\n      // }\r\n      // else {\r\n      //    this.props.history.push(`top/${this.state.page}/${this.state.limit}`)\r\n      // }\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Redirect","export function searchInput(input) {\r\n   return {\r\n      type: 'SEARCH_INPUT',\r\n      input: input\r\n   }\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n   // AppBar,\r\n   // Toolbar\r\n} from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n// import { useHistory } from 'react-router-dom'\r\nimport { fade } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as actions from '../../store/actions/searchInputActions'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.5),\r\n      '&:hover': {\r\n         backgroundColor: fade(theme.palette.common.white, 0.7),\r\n      },\r\n      margin: '1rem auto 2rem auto',\r\n      maxWidth: theme.spacing(60),\r\n      [theme.breakpoints.up('sm')]: {\r\n         // marginLeft: theme.spacing(3),\r\n         width: 'auto',\r\n      },\r\n   },\r\n   searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n   },\r\n   inputRoot: {\r\n      color: 'inherit',\r\n   },\r\n   inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n         width: '20ch',\r\n      },\r\n   },\r\n}))\r\n\r\nconst SearchInput = (props) => {\r\n   const [state, setState] = useState({\r\n      input: ''\r\n   })\r\n   const handleChange = (e) => {\r\n      setState({ input: e.target.value })\r\n   }\r\n   const handleSearch = (e) => {\r\n      e.preventDefault()\r\n      // let history = useHistory()\r\n      props.actions.searchInput(state.input)\r\n      // setState({ ...state, search: true })\r\n      // history.push('/gitProfiles')\r\n      console.log(props);\r\n   }\r\n\r\n   const classes = useStyles()\r\n   return (\r\n      <div style={{padding:'1rem'}}>\r\n        <div className={classes.search}>\r\n           <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n           </div>\r\n           <form onSubmit={handleSearch}>\r\n              <InputBase\r\n                 onChange={handleChange}\r\n                 placeholder=\"Search…\"\r\n                 classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                 }}\r\n                 inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n           </form>\r\n        </div>\r\n      </div>\r\n   )\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      input: state.input,\r\n      // params: ownProps\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      actions: bindActionCreators(actions, dispatch)\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput)\r\n// export default SearchInput\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { NavLink } from 'react-router-dom'\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import Button from '@material-ui/core/Button';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n\t\t\tminWidth: 275,\r\n\t\t\tmaxWidth:300,\r\n\t\t\tbackground:'white',\r\n\t\t\tcolor: 'white',\r\n\t\t\tpadding:'1rem'\r\n   },\r\n   bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n   },\r\n   title: {\r\n\t\t fontSize: 14,\r\n\t\t color: 'white'\r\n   },\r\n   pos: {\r\n\t\t marginBottom: 12,\r\n\t },\r\n\tbutton: {\r\n\t\twidth:'100%'\r\n\t},\r\n\timg: {\r\n\t\tmargin: '0rem auto 1rem auto',\r\n\t\twidth: theme.spacing(20),\r\n\t\theight: theme.spacing(20),\r\n\t}\r\n}));\r\n\r\nconst ProfilesListSearched = (props) => {\r\n   // const classes = useStyles();\r\n   console.log('howdu',props);\r\n\t // const users = props.user ? props.gits.data.items : props.gits.data\r\n   // console.log(props.user ? props.gits.data.total_count : 'nops');\r\n   return(\r\n\t\t\t\t <Grid container justify=\"center\" spacing={2} style={{margin:'0 -1rem'}}>\r\n\t\t\t\t {/*\r\n           users ? (\r\n\t\t\t\t\tusers.map(user => (\r\n\t\t\t\t\t<Grid key={user.id} item>\r\n\t\t\t\t\t <Card className={classes.root} variant=\"outlined\">\r\n\t\t\t\t\t\t <CardContent>\r\n\t\t\t\t\t\t\t <Avatar alt={user.login} src={user.avatar_url} className={classes.img} />\r\n\t\t\t\t\t\t\t <Typography variant=\"h5\" color=\"textPrimary\" component=\"h2\" align='center'>\r\n\t\t\t\t\t\t\t\t{user.login}\r\n\t\t\t\t\t\t\t\t<a href={user.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t\t\t\t\t<GitHubIcon/>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t </Typography>\r\n\t\t\t\t\t\t </CardContent>\r\n\t\t\t\t\t\t <CardActions>\r\n\t\t\t\t\t\t\t\t <Button component={NavLink} to={'/gits/'+user.login} size=\"small\" variant=\"contained\" color=\"primary\" disableElevation className={classes.button}>Learn More</Button>\r\n\t\t\t\t\t\t </CardActions>\r\n\t\t\t\t\t </Card>\r\n\t\t\t\t\t </Grid>\r\n\t\t\t\t ))\r\n       ):(\r\n         <div className=\"my-4 text-white text-center\">\r\n          <h2>Please Wait</h2>\r\n          <h3>While Data loads</h3>\r\n         </div>\r\n       )\r\n\t\t\t\t */}\r\n\r\n\t\t\t\t </Grid>\r\n   )\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gits: state.gits\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfilesListSearched)\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as gitActions from '../../store/actions/gitReposActions'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProfilesListSearched from './ProfilesListSearched'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiPaginationItem: {\r\n      root: {\r\n        color: 'white',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchResults(props) {\r\n   const [since, setSince] = useState(0)\r\n   const [page, setPage] = useState(0)\r\n   const [pageHandle, setPageHandle] = useState(false)\r\n   const [input] = useState('')\r\n   const [url, setURL] = useState('')\r\n   // const [reload, setReload] = useState(0)\r\n\r\n   const ref = useRef({\r\n      inputRef: input,\r\n   });\r\n\r\n   const handleChange = (event,paige) => {\r\n     pageHandle ? setPage(paige-1) : setSince(paige-1)\r\n   }\r\n\r\n   useEffect(() => {\r\n      (props.input === '') ? setPageHandle(false) : setPageHandle(true)\r\n      const newInput = props.input;\r\n      const prevInput = ref.current.inputRef;\r\n      // console.log(\"handler:::\",pageHandle);\r\n      const fetchData = async () => {\r\n         const urll = (props.input === \"\") ? `/search/repositories?q=react` : `/search/repositories?q=${props.input}`\r\n         // const urll = `/search/repositories?q=${props.input}`\r\n         await props.actions.getGitRepos(urll)\r\n            .catch(error => { alert(\"Som Tin Wong\") })\r\n         }\r\n\r\n      if (prevInput !== newInput) { setPage(0) }\r\n\r\n      fetchData()\r\n\r\n      // update Ref\r\n      ref.current.inputRef = props.input\r\n\r\n      //unmounting\r\n      // return () => { console.log(\"unmounting...\");}\r\n   },[since,page,props.input]);\r\n\r\n   // const count = props.input ? (\r\n   //   (props.gits.data.total_count <= 1000) ? (\r\n   //     Math.ceil(props.gits.data.total_count / 30)\r\n   //   ) : (\r\n   //     Math.ceil(1000/30)\r\n   //   )\r\n   // ) : 'nops'\r\n   console.log(props);\r\n\r\n   return (\r\n      <>\r\n         <Grid container justify=\"center\">\r\n         {/*\r\n         <ThemeProvider theme={theme}>\r\n           count === 'nops' ? (\r\n             <Pagination count={100} page={pageHandle ? page+1 : since+1} onChange={handleChange} color=\"primary\"/>\r\n           ):(\r\n             <Pagination count={count} page={pageHandle ? page+1 : since+1} onChange={handleChange} color=\"primary\"/>\r\n           )\r\n         </ThemeProvider>\r\n         */}\r\n         </Grid>\r\n         {/*\r\n         <ProfilesListSearched input={props.input} url={url} />\r\n         */}\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      gitRepos: state.gitRepos\r\n   }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n   return {\r\n      actions: bindActionCreators(gitActions, dispatch)\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SearchInput from './getGits/SearchInput'\r\nimport SearchResults from './getGits/SearchResults'\r\n\r\nclass SearchPage extends Component {\r\n   state = {\r\n      input:''\r\n   }\r\n   componentDidMount(){\r\n     console.log(this.props);\r\n   }\r\n   componentDidUpdate(prevProps,prevState){\r\n     if (prevProps != this.props)\r\n     console.log(prevProps);\r\n   }\r\n   render() {\r\n     console.log(this.props);\r\n      return (\r\n         <div>\r\n            <SearchInput/>\r\n\r\n            \r\n              <SearchResults input={this.props.input}/>\r\n\r\n\r\n\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n   return {\r\n      input: state.input\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchPage)\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Profiles from './components/Profiles'\r\nimport ProfilesListSingle from './components/gitProfiles/ProfilesListSingle'\r\nimport Home from './components/Home'\r\nimport Navbar from './components/Navbar'\r\nimport Redirect from './components/Redirect'\r\nimport SearchPage from './components/SearchPage'\r\nimport './css/App.css'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n    <BrowserRouter>\r\n      <CssBaseline />\r\n      <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/gitProfiles' component={Profiles} />\r\n          <Route exact path='/gitProfiles/:user' component={ProfilesListSingle} />\r\n          <Route exact path='/redirecting' component={Redirect} />\r\n          <Route exact path='/gits/:git' component={SearchPage} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// import postReducer from './postReducer.js'\r\nimport gitReducer from './gitReducer.js'\r\nimport gitReposReducer from './gitReposReducer.js'\r\nimport gitUserReducer from './gitUserReducer.js'\r\nimport userReducer from './userReducer.js'\r\nimport inputReducer from './searchInputReducer.js'\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n   // posts: postReducer,\r\n   gits: gitReducer,\r\n   gitRepos: gitReposReducer,\r\n   gitUser: gitUserReducer,\r\n   user: userReducer,\r\n   input: inputReducer\r\n})\r\n\r\nexport default rootReducer\r\n","\r\nexport default function gitReducer(state = [], action) {\r\n   switch (action.type) {\r\n      case 'LOAD_GIT_SUCCESS':\r\n         return action.gits\r\n      default:\r\n         return state\r\n   }\r\n}","\r\nexport default function gitReposReducer(state = [], action) {\r\n   switch (action.type) {\r\n      case 'LOAD_GIT_REPOS_SUCCESS':\r\n         return action.gitRepos\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","\r\nexport default function gitUserReducer(state = [], action) {\r\n   switch (action.type) {\r\n      case 'LOAD_GIT_USER_SUCCESS':\r\n         return action.gitUser\r\n      default:\r\n         return state\r\n   }\r\n}","\r\nexport default function userReducer(state = '', action) {\r\n   switch (action.type) {\r\n      case 'SEARCH_USER':\r\n         return action.user\r\n      // case 'SEARCH_USER':\r\n      //    return [...state, {...action.user}]\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","\r\nexport default function inputReducer(state = '', action) {\r\n   switch (action.type) {\r\n      case 'SEARCH_INPUT':\r\n         return action.input\r\n      default:\r\n         return state\r\n   }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./store/configureStore\"\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunk))\r\nconst store = configureStore()\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport rootReducer from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant'\r\n//this will warn us if we accidentally mutate Redux State\r\n\r\nexport default function configureStore(initialState){\r\n   const composeEnhancers = \r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n      //add support for Redux Dev Tools\r\n   return createStore(\r\n      rootReducer,\r\n      initialState,\r\n      composeEnhancers(applyMiddleware(thunk,reduxImmutableStateInvariant()))\r\n      )\r\n}"],"sourceRoot":""}